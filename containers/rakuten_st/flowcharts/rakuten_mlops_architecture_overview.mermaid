    graph TD


        %% ORCHESTRATION [O]
        
        subgraph Orchestration ["`ORCHESTRATION`"]

            %% O NODE

            Airflow["`**Airflow**
            _(container)_`"]
            
            SpacerO[ ]:::hidden


        end




        %% DATA INGESTION [DI]
        subgraph DataIngestion ["`DATA INGESTION`"]

            
            %% DI NODES
            
            DataDAG["`**Data Preparation DAG**`"]
            
            PostgreSQL[("`**PostgreSQL**
            Database _(container)_`")]
            
            MinIO[("`**MinIO**
            Object Storage _(container)_`")]

            SpacerDI[ ]:::hidden
            

            %% DI EDGES 
            DataDAG -. "`_batch upload of 2k products every 15min_`" .-> DataDAG
            DataDAG --> PostgreSQL & MinIO
            Airflow --> DataDAG

        end
        


        %% MONITORING & TRIGGERING [MaT]

        subgraph MonitoringTriggering ["`MONITORING & TRIGGERING`"]

            %% MaT NODES

            Prometheus["`**Prometheus**
            _(container)_`"]

            Accuracy["`Accuracy Monitoring`"]

            DataBacklog["`Data Backlog`"]

            DriftDetection["`Drift Detection Evidently`"]

            SmartTrigger["`**Smart Trigger Mechanism**
            1. F1 < 0.7
            2. Backlog >= 10k`"]
            
            RetrainTrigger{"`Retraining Trigger`"}

            SpacerMaT[ ]:::hidden


            %% MaT EDGES

            PostgreSQL --> Accuracy & DataBacklog

            PostgreSQL --> DriftDetection
            Accuracy --> SmartTrigger
            DataBacklog --> SmartTrigger
            DriftDetection --> SmartTrigger
            SmartTrigger --> RetrainTrigger


        end


        %% MACHINE LEARNING [ML]

        subgraph MachineLearning ["`MACHINE LEARNING`"]

            %% ML NODES

            MLDAG["`**ML Pipeline DAG**`"]


            MLContainer["`**Model Training**
            _(container)_`"]
            
            Training["`**GridSearchCV**
            Model Training`"]
            
            Evaluation["`Model Evaluation`"]
            
            MLflow[("`**MLflow**
            Model Registry _(container)_`")]

            SpacerML[ ]:::hidden
            


            %% ML EDGES

            Airflow --> MLDAG
            MLDAG --> MLContainer
            MLContainer --> Prometheus & Training
            Training --> Evaluation
            Evaluation --> MLflow
            MLflow -- "`_current best model_`" --> MLContainer

            MLflow --> PostgreSQL
        end




        %% REAL-TIME SERVING [RTS]
        subgraph RealTimeServing ["`REAL-TIME SERVING`"]

            %% RTS NODES

            FastAPI["`**FastAPI**
            _(container)_`"]

            RealTimeRequests["`Real Time Requests`"]
            
            RealTimePredictions["`Real Time Predictions`"]

            SpacerRTS[ ]:::hidden
            

            %% RTS EDGES
            FastAPI --> Prometheus
            RealTimeRequests --> FastAPI
            FastAPI --> RealTimePredictions
            MLContainer --> FastAPI
        end


        %% Visualization [V]
        subgraph Visualization ["Visualization"]
            
            %% V NODES

            Grafana["`**Grafana**
            _(container)_`"]

            SpacerV[ ]:::hidden
            

            %% V EDGE
            Prometheus --> Grafana
        end

        %% LAYOUT: LOCK FLOWCHART
        SpacerO ~~~ SpacerDI & SpacerML
        SpacerDI ~~~ SpacerMaT
        SpacerML ~~~ SpacerMaT
        SpacerML ~~~ SpacerRTS
        SpacerML ~~~ SpacerV

        %% LAYOUT: EDGES BETWEEN COMPONENTS
        RetrainTrigger -. "`_only if necessary_`" .-> MLDAG


        %% STYLING

        %% Apply default styles to ALL nodes
        classDef default fill:#FFF,stroke:#333,stroke-width:2px;

        %% Apply default styles to ALL edges
        linkStyle default stroke:#999,stroke-width:2px,color:black;

        class Orchestration,Visualization invisibleSubgraph
        class MLContainer,FastAPI,Airflow,Prometheus,Grafana container
        class PostgreSQL,MinIO,MLflow storage
        class DataDAG,MLDAG service
        class Accuracy,DataBacklog,DriftDetection monitoring
        class SpacerO,SpacerDI,SpacerMaT,SpacerML,SpacerRTS,SpacerV spacer

        classDef invisibleSubgraph fill:transparent,stroke:none,stroke-width:0px;
        classDef container fill:#E0F2FE,stroke:#0369A1,stroke-width:2px
        classDef storage fill:#FEE2E2,stroke:#DC2626,stroke-width:2px
        classDef service fill:#ECFDF5,stroke:#059669,stroke-width:2px
        classDef monitoring fill:#FEF3C7,stroke:#D97706,stroke-width:2px
        classDef spacer fill:#FFF,stroke:#FFF,stroke-width:0px
        

